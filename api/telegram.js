export default async function handler(req, res) {
  // –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const { type, data } = req.body;
  const botToken = process.env.GTN_TELEGRAM_BOT;
  const chatId = process.env.TELEGRAM_CHAT_ID;

  try {
    let message = '';
    
    if (type === 'application') {
      // –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏
      message = `üöÄ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ GTN*\n\n` +
        `üë§ *–ò–º—è:* ${data.firstName} ${data.lastName}\n` +
        `üìß *Email:* ${data.email}\n` +
        `üìç *–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:* ${data.location}\n` +
        `üíº *–†–æ–ª—å:* ${data.role}\n` +
        `üîó *–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ:* ${data.portfolio || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
        `üéØ *–ß—Ç–æ —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å:*\n${data.build}\n\n` +
        `üí° *–ö–∞–∫ –±—É–¥–µ—Ç —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å:*\n${data.contribute}\n\n` +
        `‚ùì *–ü–æ—á–µ–º—É GTN:*\n${data.why}`;
    } else if (type === 'contact') {
      // –§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
      message = `üì® *–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤*\n\n` +
        `üë§ *–ò–º—è:* ${data.name}\n` +
        `üìß *Email:* ${data.email}\n` +
        `üìã *–¢–µ–º–∞:* ${data.subject}\n\n` +
        `üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:*\n${data.message}`;
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    if (!telegramResponse.ok) {
      const errorData = await telegramResponse.json();
      console.error('Telegram API error:', errorData);
      return res.status(500).json({ message: 'Failed to send message to Telegram', error: errorData });
    }

    res.status(200).json({ message: 'Message sent successfully' });
  } catch (error) {
    console.error('Error sending message:', error);
    res.status(500).json({ message: 'Internal server error', error: error.message });
  }
}
